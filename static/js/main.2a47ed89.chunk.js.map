{"version":3,"sources":["assets/nopostsmall.jpg","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","map","movie","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","MoviesApi","get","append_to_response","term","query","encodeURIComponent","TVApi","tv_id","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","tv","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h1","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedID","parseInt","isNaN","console","log","HeaderStyle","header","List","ul","li","current","SLink","Link","withRouter","RouterComponent","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a47ed89.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/nopostsmall.230b20bf.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 16px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap:25px;\n`;\n\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    childeren: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vh;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Loader = () =>  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n        ⏰\n    </span>\n</Container>\n\nexport default Loader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n    font-weight: bold;\n`;\n\nconst Message = ({text, color}) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n)\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Message;","import React from \"react\"\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size: .75rem;\n`;\n\n\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 10rem;\n    background-size: cover;\n    border-radius: .25rem;\n    background-position: center center;\n    transition: opacity 0.2s ease-in-out;\n`;\n\nconst Rating = styled.span`\n    position: absolute;\n    bottom: .75rem;\n    right: .25rem;\n    opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: .25rem;\n    position: relative;\n    &:hover {\n        ${Image} {\n            opacity: .3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\nconst Title = styled.span`\n    display: block;\n    margin-bottom: .25rem;\n`;\n\nconst Year = styled.span`\n    display: block;\n    color: rgba(255,255,255, .5);\n`;\n\nconst Poster = ({id, bgUrl, title, rating, year, isMovie = false}) => (\n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image  bgUrl={bgUrl ? `https://image.tmdb.org/t/p/w300${bgUrl}` : require(\"../assets/nopostsmall.jpg\")}>\n                </Image>\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                        ⭐️\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>{title.length > 15 ? `${title.substring(0, 15)}...` : title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    bgUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 3rem 20px;\n`;\n\nconst HomePresenter = ({\n    nowPlaying,\n    upcoming,\n    popular,\n    loading,\n    error\n}) =>  (\n    <>\n        <Helmet>\n            <title>Movies | Nomflix</title>\n        </Helmet>\n        {loading ? (<Loader/>) : (\n        <Container>\n            \n            {nowPlaying && nowPlaying.length > 0 && (\n                <Section title=\"Now Playing\">\n                    {nowPlaying.map(movie => (\n                            <Poster \n                                key={movie.id} \n                                id={movie.id} \n                                title={movie.original_title} \n                                bgUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                isMovie={true}\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\n                            />\n                        )\n                    )}\n                </Section>\n            )}\n            {upcoming && upcoming.length > 0 && (\n                <Section title=\"Upcoming Movies\">{upcoming.map(movie => (\n                    <Poster \n                        key={movie.id} \n                        id={movie.id} \n                        title={movie.original_title} \n                        bgUrl={movie.poster_path}\n                        rating={movie.vote_average}\n                        isMovie={true}\n                        year={movie.release_date && movie.release_date.substring(0, 4)}\n                    />\n                ))}</Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular\">{popular.map(movie => (\n                    <Poster \n                        key={movie.id} \n                        id={movie.id} \n                        title={movie.original_title} \n                        bgUrl={movie.poster_path}\n                        rating={movie.vote_average}\n                        isMovie={true}\n                        year={movie.release_date && movie.release_date.substring(0, 4)}\n                    />\n                ))}</Section>\n            )}\n            {\n                error && <Message text={error} color=\"#e74c3c\"/>\n            }\n        </Container>\n        )}\n    </>\n);\nHomePresenter.propTypes = {\n    nowPlaying:PropTypes.array,\n    upcoming:PropTypes.array,\n    popular:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"ad6efc0d7346f003a601bf59d1667b19\",\n        language: \"en-US\"\n    }\n});\n\nexport const MoviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: (id) => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n\nexport const TVApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    tvDetail: (tv_id) => api.get(`tv/${tv_id}`,{\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { MoviesApi } from \"../../api\";\n\nconst HomeContainer = class extends React.Component{\n    state = {\n        nowPlaying: null, \n        upcoming: null, \n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const {data: {results: nowPlaying}} = await MoviesApi.nowPlaying();\n            const {data: {results: upcoming}} = await MoviesApi.upcoming();\n            const {data: {results: popular}} = await MoviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            })\n        } catch {\n            this.setState({\n                error: \"can't Find movies information\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}\n\nexport default HomeContainer","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Loader from \"../../Components/Loader\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({\n    topRated,\n    popular,\n    airingToday,\n    loading,\n    error\n}) => \n    (\n        <> \n            <Helmet>\n                <title>TV | Nomflix</title>\n            </Helmet>\n            loading ? <Loader></Loader> : (\n        <Container>\n            {topRated && topRated.length > 0 && (\n                <Section title=\"Top Rated Shows\">\n                    {popular.map(tv => (\n                        <Poster \n                            key={tv.id} \n                            id={tv.id} \n                            title={tv.original_name} \n                            bgUrl={tv.poster_path}\n                            rating={tv.vote_average}\n                            year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                        />\n                    ))}\n                    \n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular Shows\">\n                    {popular.map(tv => (\n                        <Poster \n                            key={tv.id} \n                            id={tv.id} \n                            title={tv.original_name} \n                            bgUrl={tv.poster_path}\n                            rating={tv.vote_average}\n                            year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                        />\n                    ))}\n                </Section>\n            )}\n            {airingToday && airingToday.length > 0 && (\n                <Section title=\"Airing Today Shows\">\n                    {airingToday.map(tv => (\n                        <Poster \n                            key={tv.id} \n                            id={tv.id} \n                            title={tv.original_name} \n                            bgUrl={tv.poster_path}\n                            rating={tv.vote_average}\n                            year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                        />\n                    ))}\n                </Section>\n            )}\n            {\n                error && <Message text={error} color=\"#e74c3c\"/>\n            }            \n        </Container>\n    )\n\n\n        </>\n\n    );\n\nTVPresenter.propTypes = {\n    topRated:PropTypes.array,\n    popular:PropTypes.array,\n    airingToday:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { TVApi } from \"../../api\";\n\nconst TVContainer = class extends React.Component {\n    state = {\n        topRated: null, \n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount () {\n        try {\n            const {data: {results: topRated}} = await TVApi.topRated();\n            const {data: {results: popular}} = await TVApi.popular();\n            const {data: {results: airingToday}} = await TVApi.airingToday();\n            this.setState({topRated, popular, airingToday});\n        } catch {\n            this.setState({\n                error: \"can't Find movies information\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { topRated, popular, airingToday, error, loading}  = this.state;\n        return (\n            <TVPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}\n\nexport default TVContainer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 0 20px;\n`;\nconst Form = styled.form`\n    margin-bottom: 4rem;\n    width: 100%;\n`;\nconst Input = styled.input`\n    all: unset;\n    font-size: 2rem;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({\n    movieResults,\n    tvResults,\n    loading,\n    error,\n    searchTerm,\n    handleSubmit,\n    updateTerm\n}) => (\n    <>\n        (\n            <Container>\n                <Helmet>\n                    <title>Search | Nomflix</title>\n                </Helmet>\n                <Form onSubmit={handleSubmit}>\n                    <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm}></Input>\n                </Form>\n                {loading ? (<Loader/>) : (\n                    <>\n                        {movieResults && movieResults.length > 0 && (\n                            <Section title=\"Movie Results\">\n                                {movieResults.map(movie => (\n                                    <Poster \n                                        key={movie.id} \n                                        id={movie.id} \n                                        title={movie.original_title} \n                                        bgUrl={movie.poster_path}\n                                        rating={movie.vote_average}\n                                        isMovie={true}\n                                        year={movie.release_date && movie.release_date.substring(0, 4)}\n                                    />\n                                ))}\n                            </Section>\n                        )}\n                        {tvResults && tvResults.length > 0 && (\n                            <Section title=\"TV Show Results\">\n                                {tvResults.map(tv => (\n                                    <Poster \n                                        key={tv.id} \n                                        id={tv.id} \n                                        title={tv.original_name} \n                                        bgUrl={tv.poster_path}\n                                        rating={tv.vote_average}\n                                        year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                                    />\n                                ))}\n                            </Section>\n                        )}\n                    </>\n                )}\n                {\n                    error && <Message text={error} color=\"#e74c3c\"/>\n                }\n                {tvResults && movieResults && tvResults.length == 0 && movieResults.length == 0 &&  <Message text={`Nothing found`} color=\"#bdc3c7\"/>}\n            </Container>\n        )\n    </>\n\n);\n\nSearchPresenter.propTypes = {\n    movieResults:PropTypes.array,\n    tvResults:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    searchTerm: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n}\n\nexport default SearchPresenter;\n\n\n\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport { MoviesApi, TVApi } from \"../../api\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nconst SearchContainer = class extends React.Component {\n    state = {\n        movieResults: null, \n        tvResults: null,\n        error: null,\n        loading: false,\n        searchTerm: \"\"\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if(searchTerm !== \"\"){\n            this.searchByTerm(searchTerm);\n        }\n    }\n\n    updateTerm = (event) => {\n        const {target: {value}} = event;\n        this.setState({\n            searchTerm: value\n        })\n    }\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({ loading: true });\n        try {\n            const {data: {results: movieResults}} = await MoviesApi.search(searchTerm);\n            const {data: {results: tvResults}} = await TVApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            })\n            this.setState({loading: true});\n        } catch {\n            this.setState({\n                error: \"can't Find search information\"\n            });\n        } finally {\n            this.setState({ loading: false });\n        }\n\n    }\n\n    render() {\n        const { movieResults, tvResults, searchTerm, error, loading, handleSubmit, updateTerm} = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                error={error}\n                loading={loading}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n}\n\nexport default SearchContainer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%; \n    position: relative;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: .5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h1 `\n    font-size: 3rem;\n    margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n    margin-bottom: 10px 0;\n`;\n\nconst Item = styled.span`\n\n`;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: .7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\nconst DetailPresenter = ({\n    result,\n    loading,\n    error\n}) => \n    loading ? (\n        <>\n            <Helmet>\n                <title>Loading | Nomflix</title>\n            </Helmet>\n            <Loader/>\n        </>\n    ) : (\n        error ? <Message/> : \n        <Container>\n            <Helmet>\n                <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\n            </Helmet>\n            <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}/>\n            <Content >\n                <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/nopostsmall.jpg\")}>\n                </Cover>\n                <Data>\n                    <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n                    <ItemContainer>\n                        <Item>{result.release_date ? result.release_date.substring(0,4) : result.first_air_date.substring(0,4)}</Item>\n                        <Divider>*</Divider>\n                        <Item>{result.runtime ? result.runtime : result.episode_run_time[0]}</Item>\n                        <Divider>*</Divider>\n                        <Item>\n                            {result.genres && \n                                result.genres.map((genre, index) => \n                                    index === result.genres.length - 1 \n                                        ? genre.name \n                                        : `${genre.name} /`\n                                    )} \n                        </Item>\n                    </ItemContainer>\n                    <Overview>\n                        {result.overview}\n                    </Overview>\n                </Data>\n            </Content>\n\n        </Container>\n    );\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport { MoviesApi, TVApi } from \"../../api\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nconst DetailContainer = class extends React.Component{\n\n    constructor(props) {\n        super(props);\n        const {\n            location: {pathname}\n        } = props;\n        this.state  = {\n            result: null, \n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    \n    }\n\n    \n    async componentDidMount() {\n        const {\n            match: {params: {id}},\n            history: {push}\n        } = this.props;\n        const {isMovie} = this.state;\n        const parsedID = parseInt(id);\n        if (isNaN(parsedID)) {\n            return push(\"/\");\n        }\n        let result;\n        try {\n            if(isMovie){\n                ({data: result} = await MoviesApi.movieDetail(parsedID));\n            } else {\n                ({data: result} = await TVApi.tvDetail(parsedID));\n            }\n            console.log(result);\n        } catch {\n            this.setState({error: \"Can't find anything.\"});\n        } finally {\n            this.setState({loading: false, result});\n        }\n    }\n\n    render() {\n        const { result, error, loading } = this.state;\n        return (\n            <DetailPresenter\n                result={result}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}\n\nexport default DetailContainer","\nimport React from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst HeaderStyle = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n    background-color: rgba(20,20,20,.8);\n    color: white;\n    z-index: 10;\n    box-shadow: 0 1px 5px 2px rgba(0,0,0,.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    border-bottom: 5px solid ${props => (props.current ? \"#3498db\" : \"transparent\")};\n    transition: border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    display: flex;\n    height: 50px;\n    align-items: center;\n    justify-content: center;\n`;\n\n\nconst Header = ({location: {pathname}}) => (\n    <HeaderStyle>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </HeaderStyle>\n);\n\nexport default withRouter(Header);\n","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Home from \"../Routes/Home\";\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Detail from \"../Routes/Detail\";\nimport Header from \"../Components/Header\";\n\nconst RouterComponent = () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home}></Route>\n                <Route path=\"/tv\" exact component={TV}></Route>\n                <Route path=\"/search\" component={Search}></Route>\n                <Route path=\"/movie/:id\" component={Detail}></Route>\n                <Route path=\"/tv/:id\" component={Detail}></Route>\n                <Redirect from=\"*\" to=\"/\"/>\n            </Switch>\n        </>\n    </Router>\n)\n\nexport default RouterComponent;","import { createGlobalStyle} from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20,20,20,1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return <>\n      <Router />\n      <GlobalStyles/>\n    </>\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}